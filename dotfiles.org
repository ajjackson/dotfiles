* Setup

This block of elisp loads an elisp file to set variables that can be
used in =:tangle= arguments. It will be run automatically at document
load due to local variables set at the bottom of this file; the user
probabably needs to authorise this with 'y'.

#+name: guess-system
#+begin_src emacs-lisp
(setq system
      (let ((hostname (system-name)))
        (cond ((member hostname '("Angel" "Angel.lan" "Angel.local")) "Angel")
              ((member hostname '("ajj-mbp-1" "ajj-mbp-1.local"
                                  "dock-ajj-mbp-1" "dock-ajj-mbp-1.esc.rl.ac.uk"))
               "ajj-mbp-1")
              ('t hostname))
        ))
#+end_src

* Dummy files

#+begin_src conf :mkdirp yes :tangle "test/demo"
This is great
#+end_src

#+begin_src conf :tangle (if (member system '("Arctopus" "DreamMachine")) "test/demo" "no")
for music
#+end_src

#+begin_src conf :mkdirp yes :tangle (if (not (member system '("Arctopus" "DreamMachine"))) "test/demo" "no")
for sports
#+end_src


* End matter

# Use M-x normal-mode to re-run local variables/eval and set the environment for tangle logic

# Local Variables:
# eval: (progn (org-babel-goto-named-src-block "guess-system") (org-babel-execute-src-block) (outline-hide-sublevels 1))
# End:
